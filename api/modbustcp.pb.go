// Code generated by protoc-gen-go. DO NOT EDIT.
// source: modbustcp.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ModbusTcpUpdateRequest struct {
	Devid                string   `protobuf:"bytes,1,opt,name=devid,proto3" json:"devid,omitempty"`
	Devaddr              string   `protobuf:"bytes,3,opt,name=devaddr,proto3" json:"devaddr,omitempty"`
	Commif               string   `protobuf:"bytes,4,opt,name=commif,proto3" json:"commif,omitempty"`
	FunctionCode         uint32   `protobuf:"varint,9,opt,name=functionCode,proto3" json:"functionCode,omitempty"`
	StartingAddress      uint32   `protobuf:"varint,10,opt,name=startingAddress,proto3" json:"startingAddress,omitempty"`
	Quantity             uint32   `protobuf:"varint,11,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Dname                string   `protobuf:"bytes,12,opt,name=dname,proto3" json:"dname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModbusTcpUpdateRequest) Reset()         { *m = ModbusTcpUpdateRequest{} }
func (m *ModbusTcpUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*ModbusTcpUpdateRequest) ProtoMessage()    {}
func (*ModbusTcpUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_modbustcp_d18ff50ad75fa80c, []int{0}
}
func (m *ModbusTcpUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModbusTcpUpdateRequest.Unmarshal(m, b)
}
func (m *ModbusTcpUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModbusTcpUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *ModbusTcpUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModbusTcpUpdateRequest.Merge(dst, src)
}
func (m *ModbusTcpUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_ModbusTcpUpdateRequest.Size(m)
}
func (m *ModbusTcpUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModbusTcpUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModbusTcpUpdateRequest proto.InternalMessageInfo

func (m *ModbusTcpUpdateRequest) GetDevid() string {
	if m != nil {
		return m.Devid
	}
	return ""
}

func (m *ModbusTcpUpdateRequest) GetDevaddr() string {
	if m != nil {
		return m.Devaddr
	}
	return ""
}

func (m *ModbusTcpUpdateRequest) GetCommif() string {
	if m != nil {
		return m.Commif
	}
	return ""
}

func (m *ModbusTcpUpdateRequest) GetFunctionCode() uint32 {
	if m != nil {
		return m.FunctionCode
	}
	return 0
}

func (m *ModbusTcpUpdateRequest) GetStartingAddress() uint32 {
	if m != nil {
		return m.StartingAddress
	}
	return 0
}

func (m *ModbusTcpUpdateRequest) GetQuantity() uint32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *ModbusTcpUpdateRequest) GetDname() string {
	if m != nil {
		return m.Dname
	}
	return ""
}

type ModbusTcpUpdateResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModbusTcpUpdateResponse) Reset()         { *m = ModbusTcpUpdateResponse{} }
func (m *ModbusTcpUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*ModbusTcpUpdateResponse) ProtoMessage()    {}
func (*ModbusTcpUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_modbustcp_d18ff50ad75fa80c, []int{1}
}
func (m *ModbusTcpUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModbusTcpUpdateResponse.Unmarshal(m, b)
}
func (m *ModbusTcpUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModbusTcpUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *ModbusTcpUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModbusTcpUpdateResponse.Merge(dst, src)
}
func (m *ModbusTcpUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_ModbusTcpUpdateResponse.Size(m)
}
func (m *ModbusTcpUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ModbusTcpUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ModbusTcpUpdateResponse proto.InternalMessageInfo

func (m *ModbusTcpUpdateResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*ModbusTcpUpdateRequest)(nil), "api.ModbusTcpUpdateRequest")
	proto.RegisterType((*ModbusTcpUpdateResponse)(nil), "api.ModbusTcpUpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ModbusTcpClient is the client API for ModbusTcp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModbusTcpClient interface {
	// 添加或更新ModbusTcp设备
	ModbusTCPUpdate(ctx context.Context, in *ModbusTcpUpdateRequest, opts ...grpc.CallOption) (*ModbusTcpUpdateResponse, error)
}

type modbusTcpClient struct {
	cc *grpc.ClientConn
}

func NewModbusTcpClient(cc *grpc.ClientConn) ModbusTcpClient {
	return &modbusTcpClient{cc}
}

func (c *modbusTcpClient) ModbusTCPUpdate(ctx context.Context, in *ModbusTcpUpdateRequest, opts ...grpc.CallOption) (*ModbusTcpUpdateResponse, error) {
	out := new(ModbusTcpUpdateResponse)
	err := c.cc.Invoke(ctx, "/api.ModbusTcp/ModbusTCPUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModbusTcpServer is the server API for ModbusTcp service.
type ModbusTcpServer interface {
	// 添加或更新ModbusTcp设备
	ModbusTCPUpdate(context.Context, *ModbusTcpUpdateRequest) (*ModbusTcpUpdateResponse, error)
}

func RegisterModbusTcpServer(s *grpc.Server, srv ModbusTcpServer) {
	s.RegisterService(&_ModbusTcp_serviceDesc, srv)
}

func _ModbusTcp_ModbusTCPUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModbusTcpUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModbusTcpServer).ModbusTCPUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ModbusTcp/ModbusTCPUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModbusTcpServer).ModbusTCPUpdate(ctx, req.(*ModbusTcpUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModbusTcp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ModbusTcp",
	HandlerType: (*ModbusTcpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ModbusTCPUpdate",
			Handler:    _ModbusTcp_ModbusTCPUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modbustcp.proto",
}

func init() { proto.RegisterFile("modbustcp.proto", fileDescriptor_modbustcp_d18ff50ad75fa80c) }

var fileDescriptor_modbustcp_d18ff50ad75fa80c = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0x3b, 0x31,
	0x10, 0xc6, 0xc9, 0xbf, 0x7f, 0xab, 0x1d, 0x2b, 0x85, 0x20, 0x35, 0xac, 0x15, 0xca, 0x9e, 0x16,
	0x0f, 0x2d, 0xea, 0xcd, 0x9b, 0xf4, 0x2c, 0xc8, 0xa2, 0xe7, 0x25, 0xdd, 0x49, 0x97, 0x40, 0x37,
	0x49, 0x37, 0xc9, 0x82, 0x57, 0x7d, 0x04, 0x1f, 0xcd, 0x17, 0xf0, 0xe0, 0x83, 0xc8, 0x66, 0xd7,
	0x05, 0xb5, 0xc7, 0xdf, 0xcc, 0x37, 0x99, 0x6f, 0xf2, 0xc1, 0xa4, 0xd4, 0xb8, 0xf6, 0xd6, 0xe5,
	0x66, 0x61, 0x2a, 0xed, 0x34, 0x1d, 0x70, 0x23, 0xa3, 0x59, 0xa1, 0x75, 0xb1, 0x15, 0x4b, 0x6e,
	0xe4, 0x92, 0x2b, 0xa5, 0x1d, 0x77, 0x52, 0x2b, 0xdb, 0x4a, 0xe2, 0x0f, 0x02, 0xd3, 0xfb, 0x30,
	0xf6, 0x98, 0x9b, 0x27, 0x83, 0xdc, 0x89, 0x54, 0xec, 0xbc, 0xb0, 0x8e, 0x9e, 0xc2, 0x01, 0x8a,
	0x5a, 0x22, 0x23, 0x73, 0x92, 0x8c, 0xd2, 0x16, 0x28, 0x83, 0x43, 0x14, 0x35, 0x47, 0xac, 0xd8,
	0x20, 0xd4, 0xbf, 0x91, 0x4e, 0x61, 0x98, 0xeb, 0xb2, 0x94, 0x1b, 0xf6, 0x3f, 0x34, 0x3a, 0xa2,
	0x31, 0x8c, 0x37, 0x5e, 0xe5, 0xcd, 0xd6, 0x95, 0x46, 0xc1, 0x46, 0x73, 0x92, 0x9c, 0xa4, 0x3f,
	0x6a, 0x34, 0x81, 0x89, 0x75, 0xbc, 0x72, 0x52, 0x15, 0x77, 0x88, 0x95, 0xb0, 0x96, 0x41, 0x90,
	0xfd, 0x2e, 0xd3, 0x08, 0x8e, 0x76, 0x9e, 0x2b, 0x27, 0xdd, 0x33, 0x3b, 0x0e, 0x92, 0x9e, 0x83,
	0x63, 0xc5, 0x4b, 0xc1, 0xc6, 0x9d, 0xe3, 0x06, 0xe2, 0x2b, 0x38, 0xfb, 0x73, 0xa1, 0x35, 0x5a,
	0x59, 0xd1, 0x58, 0x4e, 0x85, 0xf5, 0x5b, 0xd7, 0xdd, 0xd8, 0xd1, 0xf5, 0x2b, 0x81, 0x51, 0x3f,
	0x43, 0x6b, 0x98, 0x74, 0xb0, 0x7a, 0x68, 0x1f, 0xa0, 0xe7, 0x0b, 0x6e, 0xe4, 0x62, 0xff, 0xc7,
	0x45, 0xb3, 0xfd, 0xcd, 0x76, 0x67, 0x9c, 0xbc, 0xbc, 0x7f, 0xbe, 0xfd, 0x8b, 0xa3, 0x8b, 0x90,
	0x48, 0x1f, 0x59, 0xc6, 0x11, 0x33, 0x5d, 0x65, 0xde, 0x04, 0xf9, 0x2d, 0xb9, 0x5c, 0x0f, 0x43,
	0x44, 0x37, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x84, 0x94, 0xc8, 0x5d, 0xd8, 0x01, 0x00, 0x00,
}
