// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tc100r8r.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TcozzreUpdateRequest struct {
	Devid                string   `protobuf:"bytes,1,opt,name=devid,proto3" json:"devid,omitempty"`
	Devaddr              string   `protobuf:"bytes,3,opt,name=devaddr,proto3" json:"devaddr,omitempty"`
	Commif               string   `protobuf:"bytes,4,opt,name=commif,proto3" json:"commif,omitempty"`
	Dname                string   `protobuf:"bytes,5,opt,name=dname,proto3" json:"dname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcozzreUpdateRequest) Reset()         { *m = TcozzreUpdateRequest{} }
func (m *TcozzreUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*TcozzreUpdateRequest) ProtoMessage()    {}
func (*TcozzreUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tc100r8r_8de24bdc3197f900, []int{0}
}
func (m *TcozzreUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcozzreUpdateRequest.Unmarshal(m, b)
}
func (m *TcozzreUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcozzreUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *TcozzreUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcozzreUpdateRequest.Merge(dst, src)
}
func (m *TcozzreUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_TcozzreUpdateRequest.Size(m)
}
func (m *TcozzreUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TcozzreUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TcozzreUpdateRequest proto.InternalMessageInfo

func (m *TcozzreUpdateRequest) GetDevid() string {
	if m != nil {
		return m.Devid
	}
	return ""
}

func (m *TcozzreUpdateRequest) GetDevaddr() string {
	if m != nil {
		return m.Devaddr
	}
	return ""
}

func (m *TcozzreUpdateRequest) GetCommif() string {
	if m != nil {
		return m.Commif
	}
	return ""
}

func (m *TcozzreUpdateRequest) GetDname() string {
	if m != nil {
		return m.Dname
	}
	return ""
}

type TcozzreUpdateResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcozzreUpdateResponse) Reset()         { *m = TcozzreUpdateResponse{} }
func (m *TcozzreUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*TcozzreUpdateResponse) ProtoMessage()    {}
func (*TcozzreUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tc100r8r_8de24bdc3197f900, []int{1}
}
func (m *TcozzreUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcozzreUpdateResponse.Unmarshal(m, b)
}
func (m *TcozzreUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcozzreUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *TcozzreUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcozzreUpdateResponse.Merge(dst, src)
}
func (m *TcozzreUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_TcozzreUpdateResponse.Size(m)
}
func (m *TcozzreUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TcozzreUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TcozzreUpdateResponse proto.InternalMessageInfo

func (m *TcozzreUpdateResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*TcozzreUpdateRequest)(nil), "api.TcozzreUpdateRequest")
	proto.RegisterType((*TcozzreUpdateResponse)(nil), "api.TcozzreUpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TC100R8Client is the client API for TC100R8 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TC100R8Client interface {
	// 添加或更新TC100R8控制器
	TcozzreUpdate(ctx context.Context, in *TcozzreUpdateRequest, opts ...grpc.CallOption) (*TcozzreUpdateResponse, error)
}

type tC100R8Client struct {
	cc *grpc.ClientConn
}

func NewTC100R8Client(cc *grpc.ClientConn) TC100R8Client {
	return &tC100R8Client{cc}
}

func (c *tC100R8Client) TcozzreUpdate(ctx context.Context, in *TcozzreUpdateRequest, opts ...grpc.CallOption) (*TcozzreUpdateResponse, error) {
	out := new(TcozzreUpdateResponse)
	err := c.cc.Invoke(ctx, "/api.TC100R8/TcozzreUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TC100R8Server is the server API for TC100R8 service.
type TC100R8Server interface {
	// 添加或更新TC100R8控制器
	TcozzreUpdate(context.Context, *TcozzreUpdateRequest) (*TcozzreUpdateResponse, error)
}

func RegisterTC100R8Server(s *grpc.Server, srv TC100R8Server) {
	s.RegisterService(&_TC100R8_serviceDesc, srv)
}

func _TC100R8_TcozzreUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TcozzreUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TC100R8Server).TcozzreUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TC100R8/TcozzreUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TC100R8Server).TcozzreUpdate(ctx, req.(*TcozzreUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TC100R8_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.TC100R8",
	HandlerType: (*TC100R8Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TcozzreUpdate",
			Handler:    _TC100R8_TcozzreUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tc100r8r.proto",
}

func init() { proto.RegisterFile("tc100r8r.proto", fileDescriptor_tc100r8r_8de24bdc3197f900) }

var fileDescriptor_tc100r8r_8de24bdc3197f900 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x31, 0x4e, 0xc3, 0x30,
	0x18, 0x85, 0x15, 0x4a, 0x5b, 0x61, 0x09, 0x06, 0xab, 0x20, 0x13, 0x18, 0xaa, 0x0c, 0x08, 0x31,
	0x24, 0x29, 0x2c, 0x15, 0x2b, 0x37, 0xb0, 0xca, 0x1c, 0xfd, 0xc4, 0x3f, 0x95, 0xa5, 0xc6, 0xbf,
	0xb1, 0x9d, 0x4a, 0x74, 0xe4, 0x0a, 0x1c, 0x8d, 0x2b, 0x70, 0x10, 0x54, 0xc7, 0x0c, 0xa0, 0x8e,
	0x9f, 0xdf, 0xf3, 0x7b, 0xfa, 0x1f, 0x3b, 0x0b, 0xed, 0xa2, 0xae, 0xdd, 0xd2, 0x95, 0xd6, 0x51,
	0x20, 0x3e, 0x02, 0xab, 0xf3, 0xeb, 0x35, 0xd1, 0x7a, 0x83, 0x15, 0x58, 0x5d, 0x81, 0x31, 0x14,
	0x20, 0x68, 0x32, 0x7e, 0xb0, 0x14, 0x81, 0xcd, 0x56, 0x2d, 0xed, 0x76, 0x0e, 0x9f, 0xad, 0x82,
	0x80, 0x12, 0xdf, 0x7a, 0xf4, 0x81, 0xcf, 0xd8, 0x58, 0xe1, 0x56, 0x2b, 0x91, 0xcd, 0xb3, 0xdb,
	0x13, 0x39, 0x00, 0x17, 0x6c, 0xaa, 0x70, 0x0b, 0x4a, 0x39, 0x31, 0x8a, 0xef, 0xbf, 0xc8, 0x2f,
	0xd8, 0xa4, 0xa5, 0xae, 0xd3, 0xaf, 0xe2, 0x38, 0x0a, 0x89, 0x62, 0x8e, 0x81, 0x0e, 0xc5, 0x38,
	0xe5, 0xec, 0xa1, 0xa8, 0xd8, 0xf9, 0xbf, 0x56, 0x6f, 0xc9, 0x78, 0xdc, 0xc7, 0x48, 0xf4, 0xfd,
	0x26, 0xa4, 0xde, 0x44, 0xf7, 0xef, 0x6c, 0xba, 0x7a, 0x5a, 0xd4, 0xb5, 0x5c, 0x72, 0xc3, 0x4e,
	0xff, 0xfc, 0xe5, 0x97, 0x25, 0x58, 0x5d, 0x1e, 0xba, 0x22, 0xcf, 0x0f, 0x49, 0x43, 0x55, 0x71,
	0xf3, 0xf1, 0xf5, 0xfd, 0x79, 0x34, 0xcf, 0xaf, 0xe2, 0x32, 0x69, 0xb9, 0x06, 0x94, 0x6a, 0xc8,
	0x35, 0xbd, 0x8d, 0xe6, 0xc7, 0xec, 0xee, 0x65, 0x12, 0x87, 0x7a, 0xf8, 0x09, 0x00, 0x00, 0xff,
	0xff, 0xcd, 0x11, 0x1a, 0xd3, 0x5d, 0x01, 0x00, 0x00,
}
